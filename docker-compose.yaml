version: '3.9'

services:
  redis:
    image: redis
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    networks:
      - my_network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: finTechDB
    ports:
      - "5432:5432"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - ./data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - my_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - my_network
  goapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fintech_app
    ports:
      - "${APP_HOST_PORT:-8080}:8080"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    working_dir: /app
    # command: [ "reflex", "-r", "\\.go$", "--", "go", "run", "./cmd/main.go" ]
    command: [ "go", "run", "./cmd/main.go" ]
    # environment:
    #   - PORT=8080
    restart: unless-stopped
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
